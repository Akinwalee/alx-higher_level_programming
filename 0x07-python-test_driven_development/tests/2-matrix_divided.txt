"""This is a doctest for the matrix divider function"""


---------------------------------------------
matrix(<list of lit of ints/floats>, divider)
----------------------------------------------

Import the module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Then test as follows:

>>> matrix_divided()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([1, 2])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided([1, 2], 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 8, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/float")
TypeError: matrix must be a matrix (list of lists) of integers/float

>>> matrix_divided([[1, 2]], 4)
[[0.25, 0.5]]

>>> matrix_divided([[1, 2], [8, 16, 88]], 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 12, in matrix_divided
    raise TypeError("Each row of the matrix muxt have the same size")
TypeError: Each row of the matrix muxt have the same size

>>> matrix_divided([[1, 2], [8, 88]], 4)
[[2.0, 22.0], [2.0, 22.0]]

>>> matrix_divided([[1, 2], [8, 88], [5.4, 3.3]], 4)
[[1.35, 0.82], [1.35, 0.82], [1.35, 0.82]]

>>> matrix_divided([[1, 2], [8, 88], [5.4, 3.3]], 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 16, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
