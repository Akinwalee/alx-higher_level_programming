"""This is a test for add_integer function"""

Import the module:

>>> add_integer = __import__('0-add_integer').add_integer

Then use it a follows:

>>> add_integer(2, 5)
7
>>> add_integer(3.667, 5)
8
>>> add_integer(3.667, 58.9)
61
>>> add_integer(3.667)
101
>>> add_integer(2)
100
>>> add_integer(1)
99
>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(1, 2)
3
>>> add_integer(1, )
99

>>> add_integer("33.55", 7.49)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/exam.py", line 4, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(33e444, 7.49)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/exam.py", line 8, in add_integer
    a = int(a)
OverflowError: cannot convert float infinity to integer
